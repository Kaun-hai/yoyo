# include<iostream>
using namespace std;
class queue{ 
private: 
int front; 
int rear; 
int arr[5]; 
public: 
queue(){ 
front=-1; 
rear=-1; 
for(int i=0;i<5;i++){ 
arr[i]=0; 
} 
} 
bool IsEmpty(){ 
if (front==-1&&rear==-1) 
return true; 
else return false; 
} 
bool IsFull(){ 
if(rear==4) 
return true; 
else return false; 
} 
void enqueue(int val){ 
if(IsFull()) { 
cout<<"Queue is Full\n"; 
} 
else if(IsEmpty()){ 
front = 0; 
rear = 0; 
arr[rear] = val; 
} 
else { 
rear++; 
arr[rear]=val; 
} 
} 
int dequeue(){ 
int x=0; 
if(IsEmpty()) { 
cout<<"Queue is Empty\n"; 
return x; 
} 
else if(front==rear){ 
x=arr[rear]; 
front=-1; 
rear=-1; 
return x; 
} 
else{ 
cout<<"Front value:\n"<<front; 
x=arr[front];
front++;
return x; 
} 
} 
int count(){ 
return (rear - front +1); 
} 
void display(){ 
cout<<"All values present in queue are:"; 
for(int i=front; i<=rear; i++){ 
cout<<arr[i]<<endl; 
} 
}
};
int main(){ 
queue q1; 
int val,choice; 
do{ 
cout<<"\nWhat operation do you want to perfrom?\n Select option number.\n Enter 0 to exit\n"; 
cout<<"1. Enqueue\n"; 
cout<<"2. Dequeue\n"; 
cout<<"3. IsEmpty\n"; 
cout<<"4. IsFull\n"; 
cout<<"5. Count elements in the Queue\n"; 
cout<<"6. Display\n"; 
cin>>choice; 
switch(choice){ 
case 0: 
break; 
case 1: 
cout<<"Enter a number to enqueue:\n"; 
cin>>val; 
q1.enqueue(val); 
break; 
case 2: 
cout<<"Dequeue operation\n"; 
q1.dequeue(); 
break; 
case 3: 
if(q1.IsEmpty()) 
cout<<"Queue is empty\n"; 
else cout<<"Queue is not empty\n"; 
break; 
case 4: 
if(q1.IsFull()) 
cout<<"Queue is full\n"; 
else cout<<"Queue is not full\n"; 
case 5: 
cout<<"Count of elements in the Queue="<<q1.count()<<"\n"; 
break; 
case 6: 
cout<<"Elements in the Queue=\n"; 
q1.display(); 
break; 
default :cout<<"Invalid Option\n";
} 
} 
while(choice!=0); 
return 0;
}
